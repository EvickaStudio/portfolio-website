---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
// import Blog from "./Partials/Blog.astro";
// import ContactSection from "./Partials/ContactSection.astro";
import Skills from "./Partials/Skills.astro";
import Hero from "./Hero.astro";
import Projects from "./Partials/Projects.astro";
---

<Layout title="EvickaStudio">
    <Header />
    <main class="main-content" data-has-hero>
        <Hero />
        <section class="about animate-on-scroll">
            <h2>About Me</h2>
            <p>
                I'm a Computer Science and Software Engineering student based in
                Germany. I have a passion for learning new programming
                languages, exploring code design principles, and integrating
                various services and techniques into my projects. My personal
                projects often involve automation and user interface design.
                Additionally, I enjoy contributing to and using open-source
                projects.
            </p>
        </section>
        <Skills />
        <Projects />
        <!-- <Blog /> -->
        <!-- <ContactSection /> -->
    </main>
    <Footer />
</Layout>

<style>
    :root {
        --purple-hsl: 6, 93%, 71%; /* Updated to salmon pink */
        --overlay-blurple: hsla(var(--purple-hsl), 0.2);
        --salmon-pink: rgba(250, 128, 114, 0.6); /* Define salmon pink color */
        --salmon-pink-dark: rgba(
            250,
            128,
            114,
            0.8
        ); /* Define darker salmon pink color */
    }

    :root[data-theme="light"] {
        --purple-hsl: 6, 93%, 71%; /* Updated to salmon pink */
        --overlay-blurple: hsla(var(--purple-hsl), 0.2);
        --salmon-pink: rgba(236, 121, 98, 0.6); /* Darker salmon pink color for light mode */
        --salmon-pink-dark: rgba(
            200,
            128,
            114,
            0.8
        ); /* Define darker salmon pink color for light mode */
    }

    body {
        position: relative;
        z-index: 0;
    }

    body::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background:
            linear-gradient(135deg, var(--overlay-blurple), transparent 30%),
            radial-gradient(
                    circle at 20% 50%,
                    var(--overlay-blurple),
                    transparent 50%
                )
                no-repeat -30vw -20vh / 80vw 160vh,
            radial-gradient(
                    circle at 80% 50%,
                    var(--overlay-blurple),
                    transparent 50%
                )
                no-repeat 30vw 20vh / 80vw 160vh;
        z-index: -1;
    }

    .main-content {
        padding: 8rem;
        max-width: 1200px;
        margin: auto;
    }

    .intro,
    .about,
    .skills,
    .projects,
    .contact,
    .testimonials,
    .blog {
        margin-bottom: 8rem; /* Increased from 2rem to 4rem */
    }

    .card-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-auto-rows: minmax(100px, auto);
        gap: 20px;
        padding: 0;
        margin: 0;
        width: 100%;
    }

    .card-grid > *:nth-child(4n + 1) {
        grid-column: span 2;
        grid-row: span 2;
    }

    .card-grid > *:nth-child(4n + 4) {
        grid-column: span 2;
    }

    .card-grid > * {
        min-height: 300px;
    }

    .intro h1 {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
        margin-bottom: 1rem;
        animation: fadeIn 1s ease-in-out;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .intro p {
        font-size: 1.25rem;
        text-align: center;
        margin-bottom: 2rem;
    }

    .about h2,
    .skills h2,
    .projects h2,
    .contact h2,
    .blog h2 {
        font-size: 2rem;
        font-weight: bold;
        margin-bottom: 1rem;
        animation: fadeIn 1s ease-in-out;
    }

    .projects h2 {
        margin-bottom: 1.5rem;
        position: relative;
        z-index: 1;
    }

    .card-grid {
        position: relative;
        z-index: 0;
    }

    button:hover,
    a:hover {
        transform: scale(1.05);
        transition:
            transform 0.3s ease-in-out,
            background-color 0.3s ease-in-out;
        background-color: var(--salmon-pink-dark);
    }

    button:active,
    a:active {
        animation: bounce 0.3s;
    }

    @keyframes bounce {
        0%,
        100% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-5px);
        }
    }

    .konami-animation {
        position: fixed;
        top: 50%;
        left: 50%;
        width: 100px;
        height: 100px;
        background: url("/path/to/easter-egg-image.png") no-repeat center center;
        background-size: contain;
        transform: translate(-50%, -50%);
        animation: spin 2s linear infinite;
        display: none;
    }

    body.konami .konami-animation {
        display: block;
    }

    @keyframes spin {
        from {
            transform: translate(-50%, -50%) rotate(0deg);
        }
        to {
            transform: translate(-50%, -50%) rotate(360deg);
        }
    }

    .animate-on-scroll {
        opacity: 0;
        transform: translateY(20px);
        transition:
            opacity 0.6s ease-out,
            transform 0.6s ease-out;
    }

    .animate-on-scroll.animated {
        opacity: 1;
        transform: translateY(0);
    }

    .card-hover:hover {
        background-color: var(--salmon-pink);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
        transform: translateY(-10px) scale(1.05);
        transition:
            transform 0.3s ease,
            box-shadow 0.3s ease;
    }

    /* Custom scrollbar styles */
    ::-webkit-scrollbar {
        width: 12px; /* Width of the scrollbar */
    }

    ::-webkit-scrollbar-track {
        background: #f1f1f1; /* Background of the scrollbar track */
    }

    ::-webkit-scrollbar-thumb {
        background: var(--salmon-pink); /* Color of the scrollbar thumb */
        border-radius: 6px; /* Rounded corners for the scrollbar thumb */
    }

    ::-webkit-scrollbar-thumb:hover {
        background: var(
            --purple-hsl
        ); /* Color of the scrollbar thumb on hover */
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const konamiCode = [38, 38, 40, 40, 37, 39, 37, 39, 66, 65];
        let konamiIndex = 0;

        document.addEventListener("keydown", (event) => {
            if (event.keyCode === konamiCode[konamiIndex]) {
                konamiIndex++;
                if (konamiIndex === konamiCode.length) {
                    document.body.classList.add("konami");
                    alert("Konami Code Activated!");
                    konamiIndex = 0;
                }
            } else {
                konamiIndex = 0;
            }
        });

        // Easter egg animation
        const konamiAnimation = document.createElement("div");
        konamiAnimation.className = "konami-animation";
        document.body.appendChild(konamiAnimation);

        const elements = document.querySelectorAll(".animate-on-scroll");
        const observer = new IntersectionObserver((entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    entry.target.classList.add("animated");
                }
            });
        });

        elements.forEach((element) => {
            observer.observe(element);
        });
    });

    document.addEventListener("DOMContentLoaded", () => {
        const elements = document.querySelectorAll(".animate-on-scroll");
        const observer = new IntersectionObserver((entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    entry.target.classList.add("animated");
                }
            });
        });

        elements.forEach((element) => {
            observer.observe(element);
        });
    });
</script>

